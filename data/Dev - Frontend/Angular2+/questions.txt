#Q#

What are Angular advantages?

#A#

1. It is Relatively simple to build Single Page Applications (by using Components).
2. Allows creation of flexible and structured client applications (by using OOPS concepts).
3. Angular is cross platform and open source (Free to use).
4. Writing Reusable Code is easy (by using Services).
5. Testing is easy (by using spec.ts)

#Q#

What is NPM?

#A#

NPM(Node package manager) is an **online repository**, from where you can get thousands of **free libraries** which can be used in your **angular** or node js projects.

#Q#

What are the advantages of Typescript over Javascript?

#A#

1. Typescript is a strongly typed language
2. Typescript is a superset of JavaScript
3. It has Object oriented features
4. Detects errors at compile time

#Q#

Where to store static files in Angular project?

#A#

Store static files in **assets folder** of the Angular project.

#Q#

What is the role of Angular.json file in Angular?

#A#

The angular.json file is the primary configuration file for an Angular project.

#Q#

What is the difference between JIT and AOT in Angular?

#A#

Both JIT and AOT are used to compile Angular Typescript components to Javascript, because browser understands Javascript not Typescript.
Just-in-Time (JIT) Compiles application in the browser at runtime.
This was the default until Angular 8. Ahead-of-Time (AOT) Compiles your application and libraries at build time. This is the default starting in Angular 9.

#Q#

What is advantage of AOT?

#A#

Loading in AOT is much quicker than the JIT, because it already has compiled your code at build time.

#Q#

What are Components in Angular?

#A#

Components are the most basic UI building block of an Angular app.

#Q#

What is the purpose of component selector and template?

#A#

A selector is used to <b>identify each component uniquely</b> into the component tree. A Template is a HTML view of an Angular component.

#Q#

What is a Module in Angular?

#A#

Module is a place where you can group the components, directives, pipes, and services, which are related to the application.

#Q#

What are Bootstrapped Module and Bootstrapped Component?

#A#

The module which loaded first, when the Angular application start is called Bootstrapped module.
By default, AppModule is the Bootstrapped module in Agular project.
The component which loaded first, after the module is called Bootstrapped component. By default, AppComponent is the Bootstrapped component in Agular project.

#Q#

What is Data Binding in Angular?

#A#

Data binding is the way to communicate between your typescript code of your component and html view of component.
There are 4 types of data binding in Angular:
1. String Interpolation: {{ data }}
2. Property Binding: [property] = "data"
3. Event Binding: (event) = "expression"
4. Two way data-binding: [("ngModel")] = "data"

#Q#

What is String Interpolation in Angular?

#A#

String Interpolation is a one-way data-binding technique that is used to transfer the data from a TypeScript code(component) to an HTML template (view).
String interpolation can work on string type only not numbers or any other type.
It is represented inside {{ data }} double curly braces.

#Q#

What is Property Binding in Angular?

#A#

Property binding is a superset of interpolation.
It can do whatever interpolation can do.
In addition, it can set an element property to a non-string data value like Boolean.

#Q#

When to use property binding and when to use interpolation?

#A#

When you want to transfer string only, then use interpolation because of its simplicity(just {{data}}) to use.
When you want to transfer any type other than string, then use property binding

#Q#

What is Event Binding in Angular?

#A#

Event binding is used to handle the events raised by the user actions like button click. It's a one way binding from HTML template to the TypeScript Code.

#Q#

What is Two way Binding in Angular?

#A#

Two-way data binding in Angular will help users to exchange data from the view to component and then from component to the view at the same time. Two way data-binding syntax: [("ngModel")] = "data"

#Q#

What are Directives?

#A#

Directives are classes that add additional behavior to elements in your Angular applications.

#Q#

What are the types of directives?

#A#

1. Structural Directives are classes that change appearance of DOM by adding or removing elements (*ngIf, *ngFor, *ngSwitch)
2. Attribute directives change the appearance or behavior of an element ([ngClass], [ngStyle])
3. Component directives are directives with its own template

#Q#

What is *ngIf Structural directive?

#A#

*ngIf is a structural directive, which is used to add or remove items based on the **if condition**

#Q#

What is *ngFor Structural directive?

#A#

*ngFor is a structural directive, which is used to **iterate** a list of items and then display them.

#Q#

What is [ngStyle] Attribute directive?

#A#

[ngStyle] is an attribute directive, which is used to updates styles of the HTML element.

#Q#

What is [ngClass] Attribute directive?

#A#

[ngClass] is an attribute directive, which is used to add and remove **CSS classes** on an HTML element.

#Q#

What is a Decorator?

#A#

Angular decorators store **metadata** about a class, method, or property.
Metadata is "data that provides information about other data".
All decorators are represented with @ symbol.

#Q#

What are the types of Decorator?

#A#

1. Class (@NgModule, @Component, @Injectable, @Directive, @Pipe)
2. Property (@Input, @Output, @ViewChild, @HostBinding...)
3. Method (@HostListener)
4. Parameter (@Inject, @Self)

#Q#

What are Pipes?

#A#

Pipes are simple functions which accept an input value and return a **transformed value**.
Example: {{ "Klupa" | uppercase }} will output KLUPA.

#Q#

What are the types of Pipes?

#A#

There are built-in pipes provided by Angular framework like *lowercase*, *uppercase*, *date* etc and custom pipes we can develop ourselves.

#Q#

What is a Angular Service?

#A#

It is a typescript class and reusable code which can be used in multiple components.

#Q#

What is Provider in Angular?

#A#

A provider is an object declared inside decorators which inform Angular that a particular service is available for injecting inside the components.

#Q#

What is @Input Decorator?

#A#

@Input decorator is used to pass data from parent component to child component.

#Q#

What are Lifecycle Hooks in Angular?

#A#

A component from creation to destruction goes through several stages and these stages are the life cycle hooks.
The stages will cover activities like: Component initiating, rendering the component html view, creating the child components (optional), destroying the component.
Angular provides these hooks and inside them we can code for appropriate functionality.

#Q#

What is a Constructor in Angular?

#A#

The constructor is a method in a TypeScript class that automatically gets called when the class is being instantiated. Constructor always run before any angular hook and it is not a part of Lifecycle Hooks.
Constructor is widely used to inject dependencies(services) into the component class.

#Q#

When is ngOnChanges lifecycle hook called?

#A#

The ngOnChanges is the first life cycle hook, which angular fires when it detects any changes to the input property.

#Q#

What is ngOnInit life cycle hook in Angular?

#A#

NgOnInit signals the activation of the created component.
This is the second hook and called after ngOnChanges.
It is called only once during lifecycle.

#Q#

What is router-outlet in Angular?

#A#

Router-outlet in Angular works as a placeholder, which is used to load the different components dynamically based on the activated component via Routing.

#Q#

How to do asynchronous operations in Angular?

#A#

**Observables** are used to perform asynchronous operations and handle asynchronous data.

#Q#

What are differences between Promise and Observable?

#A#

Observable emit multiple values over a period of time.
Also called streaming of data.
Promise emits a single value at a time.
Observable are lazy - they are not executed until we **subscribe** to them using subscribe() method.
Promise is not lazy - it executed **immediately** after creation.
Observable have subscriptions that are cancellable using the unsubcribe() method.
Promises are not cancellable.

#Q#

What is the role of HttpClient in Angular?

#A#

HttpClient is a built-in service class provided by Angular, which is used to perform HTTP requests(GET/POST/PUT/DELETE) to send and receive data from API or Servers.

#Q#

What are 2 types of forms in Angular?

#A#

Template driven forms and reactive forms.
Template driven forms have most code and validation logic written in HTML template.
They are used when application is simple and have less controls.
When using reactive forms, most code and validation logic is written in component typescript class file.
They are used when application is complex.

#Q#

What are the various ways to communicate between the components?

#A#

We can use @Input decorator, @Output decorator and EventEmitter.
We can pass dynamic/variable html content from parent component to child component and render it in child component using *ng-content*.
@ViewChild can be used when we want to access the element of child html component file in the parent component class file. To access child component from parent component we have to write the code inside the ngAfterViewInit lifecycle hook of the parent component class file.
