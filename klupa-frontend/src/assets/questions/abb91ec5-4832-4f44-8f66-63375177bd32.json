[{"question":"What are the Selenium suite components?","answer":"Selenium IDE\r\nIt is a Firefox/Chrome plug-in that was developed to speed up the creation of automation scripts. It records the user actions on the web browser and exports them as a reusable script.\r\n\r\nSelenium Remote Control (RC)\r\nRC is a server that allows users to write application tests in various programming languages. The commands from the test script are accepted by this server and are sent to the browser as Selenium core JavaScript commands. The browser then behaves accordingly.\r\n\r\nSelenium WebDriver\r\nWebDriver is a programming interface that helps create and run test cases. It makes provision to act on web elements. Unlike RC, WebDriver does not require an additional server and interacts natively with the browser applications.\r\n\r\nSelenium Grid\r\nThe grid was designed to distribute commands to different machines simultaneously. It allows the parallel execution of tests on different browsers and different operating systems. It is exceptionally flexible and is integrated with other suite components for simultaneous execution.","id":"22f8ca49-eab2-40e4-92b8-f462a34a5b35","categoryId":"abb91ec5-4832-4f44-8f66-63375177bd32"},{"question":"What are the limitations of Selenium testing?","answer":"1. Unavailability of reliable tech support: Since Selenium is an open-source tool, it does not have dedicated tech support to resolve the user queries. \r\n2. Tests web applications only: Selenium needs to be integrated with third-party tools like Appium and TestNG to test desktop and mobile applications.\r\n3. Limited support for image testing.\r\n4. No built-in reporting and test management facility: Selenium has to be integrated with tools like TestNG, or JUnit among others to facilitate test reporting and management.\r\n5. May require the knowledge of programming languages: Selenium WebDriver expects the user to have some basic knowledge about programming. ","id":"155e81ca-907e-4db5-b1ba-bd7a15cb2980","categoryId":"abb91ec5-4832-4f44-8f66-63375177bd32"},{"question":"What are the testing types supported by Selenium? ","answer":"Selenium supports Regression testing and Functional testing. \r\n\r\nRegression testing - It is a full or partial selection of already executed test cases that are re-executed to ensure existing functionalities work fine.\r\nFunctional testing - Functional Testing involves the verification of every function of the application with the required specification. ","id":"49575e3c-3dec-4470-b9fd-348bd7fdc639","categoryId":"abb91ec5-4832-4f44-8f66-63375177bd32"},{"question":"Mention the types of Web locators.","answer":"Locator is a command that tells Selenium IDE which GUI elements ( say Text Box, Buttons, Check Boxes, etc) it needs to operate on. Locators specify the area of action.\r\n\r\nLocator by ID: It takes a string parameter which is a value of the ID attribute which returns the object to findElement() method.\r\n  driver.findElement(By.id(“user”));\r\n\r\nLocator by the link: If your targeted element is a link text then you can use the by.linkText locator to locate that element.\r\n  driver.findElement(By.linkText(“Today’s deals”)).click();\r\n\r\nLocator by Partial link: The target link can be located using a portion of text in a link text element.\r\n  driver.findElement(By.linkText(“Service”)).click();\r\n\r\nLocator by Name: The first element with the name attribute value matching the location will be returned.\r\n  driver.findElement(By.name(“books”).click());\r\n\r\nLocator by TagName: Locates all the elements with the matching tag name\r\n  driver.findElement(By.tagName(“button”).click());\r\n\r\nLocator by classname: This finds elements based on the value of the CLASS attribute. If an element has many classes then this will match against each of them. \r\n  driver.findElement(By.className(“inputtext”));\r\n\r\nLocator by XPath: It takes a parameter of String which is a XPATHEXPRESSION and it returns an object to findElement() method.\r\n  driver.findElement(By.xpath(“//span[contains(text(),’an account’)]”)).getText();\r\n\r\nLocator by CSS Selector: Locates elements based on the driver’s underlying CSS selector engine.\r\n  driver.findElement(By.cssSelector(“input#email”)).sendKeys(“myemail@email.com”);","id":"e25fe6a0-9a67-4e90-a491-24d49a23ea0d","categoryId":"abb91ec5-4832-4f44-8f66-63375177bd32"},{"question":"What are the types of waits supported by WebDriver?","answer":"Implicit wait - Implicit wait commands Selenium to wait for a certain amount of time before throwing a “No such element” exception.\r\ndriver.manage().timeouts().implicitlyWait(TimeOut, TimeUnit.SECONDS);\r\n\r\nExplicit wait - Explicit wait is used to tell the Web Driver to wait for certain conditions before throwing an \"ElementNotVisibleException\" exception.\r\nWebDriverWait wait = new WebDriverWait(WebDriver Reference, TimeOut);\r\n\r\nFluent wait - It is used to tell the web driver to wait for a condition, as well as the frequency with which we want to check the condition before throwing an \"ElementNotVisibleException\" exception.\r\nWait wait = new FluentWait(WebDriver reference).withTimeout(timeout, SECONDS).pollingEvery(timeout, SECONDS).ignoring(Exception.class);","id":"2a04a8f0-5f9a-48d7-8322-70ded40f23bb","categoryId":"abb91ec5-4832-4f44-8f66-63375177bd32"},{"question":"Mention the types of navigation commands","answer":"driver.navigate().to(\"https://www.ebay.in/\"); - Navigates to the provided URL\r\ndriver.navigate().refresh(); - This method refreshes the current page\r\ndriver.navigate().forward(); - This method does the same operation as clicking on the Forward Button of any browser. It neither accepts nor returns anything.\r\ndriver.navigate().back(); - This method does the same operation as clicking on the Back Button of any browser. It neither accepts nor returns anything.","id":"6d6c1e59-8d33-43c0-97cc-e08f4d8000e8","categoryId":"abb91ec5-4832-4f44-8f66-63375177bd32"},{"question":"What is the major difference between driver.close() and driver.quit()?","answer":"driver.close()\r\nThis command closes the browser’s current window. If multiple windows are open, the current window of focus will be closed.\r\n\r\ndriver.quit()\r\n When quit() is called on the driver instance and there are one or more browser windows open, it closes all the open browser windows.","id":"74498365-2a21-4856-8178-2b5cebcbf526","categoryId":"abb91ec5-4832-4f44-8f66-63375177bd32"},{"question":"How to type text in an input box using Selenium?","answer":"sendKeys() is the method used to type text in input boxes \r\n\r\nConsider the following example - \r\n\r\n  WebElement email = driver.findElement(By.id(“email”)); - Finds the “email” text using the ID locator\r\n\r\n  email.sendKeys(“abcd.efgh@gmail.com”);  - Enters text into the URL field\r\n\r\n  WebElement password = driver.findElement(By.id(“Password”)); - Finds the “password” text using the ID locator\r\n\r\n  password.sendKeys(“abcdefgh123”); - Enters text into the password field","id":"3eeb928a-e251-4a7e-8e1a-e968247e79f5","categoryId":"abb91ec5-4832-4f44-8f66-63375177bd32"},{"question":"How to click on a hyperlink in Selenium?","answer":"driver.findElement(By.linkText(“Today’s deals”)).click();\r\nThe command finds the element using link text and then clicks on that element, where after the user would be redirected to the corresponding page.\r\n\r\ndriver.findElement(By.partialLinkText(“Service”)).click();\r\nThe above command finds the element based on the substring of the link provided in the parenthesis and thus partialLinkText() finds the web element. ","id":"f367933e-decf-468f-ae4f-6875642b5093","categoryId":"abb91ec5-4832-4f44-8f66-63375177bd32"},{"question":"How to assert the title of a webpage? ","answer":"Get the title of the webpage and store in a variable\r\n    String actualTitle = driver.getTitle();\r\n\r\nType in the expected title\r\n   String expectedTitle = “abcdefgh\";\r\n\r\nVerify if both of them are equal\r\n   if(actualTitle.equalsIgnoreCase(expectedTitle))\r\n   System.out.println(\"Title Matched\");\r\n  else\r\n  System.out.println(\"Title didn't match\");\r\n\r\nAlternatively,\r\n   Assert.assertEquals(actualTitle, expectedTitle);","id":"ad1bbd8e-1126-4a4b-bd02-b1c859cc8bb1","categoryId":"abb91ec5-4832-4f44-8f66-63375177bd32"},{"question":"How to retrieve CSS properties of an element?","answer":"getCssValue() method is used to retrieve CSS properties of any web element\r\n\r\nGeneral Syntax:\r\n  driver.findElement(By.id(“id“)).getCssValue(“name of css attribute”);\r\n\r\nExample:\r\n   driver.findElement(By.id(“email“)).getCssValue(“font-size”);","id":"9025c355-94f9-4446-8475-b460e17691ce","categoryId":"abb91ec5-4832-4f44-8f66-63375177bd32"},{"question":"What is POM (Page Object Model)?","answer":"Every webpage of the application has a corresponding page class that is responsible for locating the web elements and performing actions on them. Page Object Model is a design pattern that helps create object repositories for the web elements. POM improves code reusability and readability. Multiple test cases can be run on the object repository.","id":"106614e2-9975-4ffe-8d9b-5c8c174e1dce","categoryId":"abb91ec5-4832-4f44-8f66-63375177bd32"},{"question":"Can Captcha be automated?","answer":"No, Selenium cannot automate Captcha. ","id":"f1072306-8fc5-4b2d-b8ea-167e1ef66db9","categoryId":"abb91ec5-4832-4f44-8f66-63375177bd32"},{"question":"How does Selenium handle Windows-based pop-ups?","answer":"Selenium was designed to handle web applications. Windows-based features are not natively supported by Selenium. However, third-party tools like AutoIT, Robot, etc can be integrated with Selenium to handle pop-ups and other Windows-based features. ","id":"aae6531c-cc64-4551-b3b8-f83249f49caf","categoryId":"abb91ec5-4832-4f44-8f66-63375177bd32"},{"question":"Is there a way to type in a textbox without using sendKeys()?","answer":"Yes! Text can be entered into a textbox using JavaScriptExecutor\r\nJavascriptExecutor jse = (JavascriptExecutor) driver;\r\njse.executeScript(\"document.getElementById(‘email').value=“abc.efg@xyz.com”);","id":"c0810ed0-7596-4986-a166-f8125dc701a1","categoryId":"abb91ec5-4832-4f44-8f66-63375177bd32"},{"question":"What does the switchTo() command do? ","answer":"switchTo() command is used to switch between windows, frames or pop-ups within the application. Every window instantiated by the WebDriver is given a unique alphanumeric value called “Window Handle”.\r\nGet the window handle of the window you wish to switch to\r\n   String  handle= driver.getWindowHandle();\r\n\r\nSwitch to the desired window\r\n   driver.switchTo().window(handle);\r\n\r\nAlternatively\r\n  for(String handle= driver.getWindowHandles())\r\n   { driver.switchTo().window(handle); }","id":"ea45595c-884d-470e-ba68-14db0c255a50","categoryId":"abb91ec5-4832-4f44-8f66-63375177bd32"},{"question":"How to upload a file in Selenium WebDriver? ","answer":"You can achieve this by using sendkeys() or Robot class method. Locate the text box and set the file path using sendkeys() and click on submit button.","id":"60b84d72-728e-4e0b-ae18-fe2424c7a955","categoryId":"abb91ec5-4832-4f44-8f66-63375177bd32"},{"question":"How to set browser window size in Selenium?","answer":"The window size can be maximized, set or resized \r\n\r\nTo maximize the window\r\n   driver.manage().window().maximize();\r\n\r\nTo set the window size\r\n  Dimension d = new Dimension(400,600);\r\n  driver.manage().window().setSize(d);","id":"44b39efe-741e-4bcf-8851-02dd16706f68","categoryId":"abb91ec5-4832-4f44-8f66-63375177bd32"},{"question":"When do we use findElement() and findElements()?","answer":"findElement() is used to access any single element on the web page. It returns the object of the first matching element of the specified locator.\r\n\r\nGeneral syntax:\r\n   WebElement element = driver.findElement(By.id(example));\r\nfindElements() is used to find all the elements in the current web page matching the specified locator value. All the matching elements would be fetched and stored in the list of Web elements.","id":"40ddfc82-6e83-489d-b0ec-cfaeced77f1c","categoryId":"abb91ec5-4832-4f44-8f66-63375177bd32"},{"question":"What is test automation or automation testing?","answer":"Test automation or automation testing is the process of using specialized software to control the execution of tests and compare the results with expected outcomes. Automation testing can help reduce the time, cost, and effort required to test software applications by automating repetitive tasks and allowing testers to focus on more critical test cases. ","id":"8724ae2a-db46-4161-b6ca-ee6069e71857","categoryId":"abb91ec5-4832-4f44-8f66-63375177bd32"},{"question":"What are the advantages of automation testing?","answer":"There are many advantages of automation testing. Perhaps the most obvious is that it can save you a lot of time and effort. Automation testing can help to speed up the process of testing by automating repetitive tasks, such as running the same test cases multiple times or across different browsers.\r\n\r\nAnother big advantage is that automation testing can improve the accuracy of your tests. By automating the process, you can eliminate human error and ensure that your tests are always carried out the same way. This can be particularly important when testing complex applications where there is a greater risk of errors.\r\n\r\nFinally, automation testing can also help to improve the coverage of your tests. By automating more of the testing process, you can increase the number of test cases that are run and cover a larger range of functionality. This can help to ensure that your software is thoroughly tested and free of bugs.","id":"3d82d3db-fcdc-4ad4-a364-24c8bf856e26","categoryId":"abb91ec5-4832-4f44-8f66-63375177bd32"},{"question":"What do you mean by the assertion in Selenium?","answer":"An assertion is a method of testing whether a particular condition is true or false. In Selenium, assertions are used to verify the state of elements on a page or the results of an action. Assertions can be used to check for the presence or absence of an element, the value of an element, or the text of an element. Assertions can also be used to check that an element is visible or hidden.\r\n\r\nAssertions are an important part of testing with Selenium, as they enable you to verify that the state of your application meets your expectations. Without assertions, it would be difficult to know whether or not your tests are actually passing or failing.","id":"aeec0b75-31c7-462c-92ca-630574ec7738","categoryId":"abb91ec5-4832-4f44-8f66-63375177bd32"},{"question":"Explain the difference between assert and verify commands.","answer":"The assert command is used to check if the given condition is true or not. If the condition is true, then the execution of the program will continue. If the condition is false, then the execution of the program will stop.\r\n\r\nThe verify command is used to check if the given condition is true or not. If the condition is true, then the execution of the program will continue. If the condition is false, then the execution of the program will not stop, but an error message will be displayed.","id":"f2e49ce3-d79e-4706-bd20-63841dfb43de","categoryId":"abb91ec5-4832-4f44-8f66-63375177bd32"},{"question":"What do you mean by Xpath?","answer":"XPath is a language for addressing parts of an XML document. XSLT and other XML-related technologies use it to access data within XML documents. XPath can be used to navigate through elements and attributes in an XML document. XPath is a major element in the XSLT standard and is crucial for processing XML documents.","id":"016fd942-6349-4e2e-b75e-bdc686e6f278","categoryId":"abb91ec5-4832-4f44-8f66-63375177bd32"},{"question":"Explain XPath Absolute and XPath attributes.","answer":"XPath has two main types of expressions: absolute and relative. Absolute expressions always start with a forward slash (/), which indicates the root element of the document. Relative expressions do not start with a forward slash, and are relative to the current context.\r\n\r\nAttributes are another important part of XPath. Attributes are added to elements and can contain valuable information about that element. In order to access an attribute, you must use the at sign (@) followed by the attribute name.","id":"f8485f9c-d562-476a-bce3-8534d72c9bd8","categoryId":"abb91ec5-4832-4f44-8f66-63375177bd32"},{"question":"What are the different types of annotations which are used in Selenium?","answer":"Different types of annotations that are used in Selenium include:\r\n\r\n@Test - This annotation is used to mark a method as a test method\r\n@BeforeMethod - This annotation is used to execute a method before each test method\r\n@AfterMethod - This annotation is used to execute a method after each test method\r\n@BeforeClass - This annotation is used to execute a method before the first test method","id":"12a1616b-4fa7-46e0-96d4-abc8ab34507f","categoryId":"abb91ec5-4832-4f44-8f66-63375177bd32"},{"question":"What is the main disadvantage of implicit wait?","answer":"The main disadvantage of implicit wait is that it can slow down your tests. This is because, by default, the implicit wait time is set to zero. As such, if an element is not found immediately, your test will keep trying to find it for the duration of the implicit wait time. This can add a significant amount of time to your test suite. Another disadvantage of implicit wait is that it can cause your tests to fail if the element you are waiting for takes longer to appear than the implicit wait time. Finally, implicit wait can make your tests less reliable because they can introduce flakiness.","id":"42418b91-a372-4066-8049-120143d2960a","categoryId":"abb91ec5-4832-4f44-8f66-63375177bd32"},{"question":"How can we launch different browsers in Selenium WebDriver?","answer":"We can launch different browsers in Selenium WebDriver using several methods. For example, we can use the setWebDriver() method to specify the path to the browser's executable file. Alternatively, we can use the addCustomProfilePreference() method to add a custom profile preference for the browser. Finally, we can use the launchBrowser() method to launch the browser.","id":"a985282f-0509-4d5c-ba6d-a275e513b151","categoryId":"abb91ec5-4832-4f44-8f66-63375177bd32"},{"question":"","id":"d2e29014-d9f9-4f6f-8cb8-727e4a645c45","categoryId":"abb91ec5-4832-4f44-8f66-63375177bd32"}]